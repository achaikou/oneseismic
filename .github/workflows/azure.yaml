name: CI-Azure

on:
  workflow_dispatch:
  #schedule:
    # Run at 15.52 UTC every day
  #  - cron: '52 15 * * *'

jobs:
  before_performance_tests:
    name: Before All Performance tests on Azure
    runs-on: ubuntu-latest
    environment: Test

    env:
      ENVIRONMENT: test
    steps:
      - uses: actions/checkout@v2

      - name: Set infrastructure parameters
        run: |
          echo "CONTAINER_REGISTRY=${{ secrets.SETUP_PREFIX }}0containerRegistry.azurecr.io" >> $GITHUB_ENV

      - name: Login to Docker Registry with Service Principal
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Build and push performance image to Docker
        run: |
          tag=${{ env.CONTAINER_REGISTRY }}/playground/performance
          docker build -f tests/performance/Dockerfile -t $tag .
          docker push $tag

  performance_tests:
    # Note: job uses default resources. Setup from the main resource is used
    #
    # Service Principal should have access to Resource group and "push" privileges to the container registry
    #
    # The following secrets are required:
    # SETUP_PREFIX: prefix for all created resources
    # RESOURCE_GROUP : name of the resource group used for deployment
    # AZURE_CLIENT_ID : client (application) id of the Service principal
    # AZURE_CLIENT_SECRET : client secret of the Service Principal
    # AZURE_CREDENTIALS : {"clientId": "<>","clientSecret": "<>","subscriptionId": "<>","tenantId": "<>"}
    # STORAGE_ACCOUNT_KEY : key used to access storage
    # SIGN_KEY : string used for secure exchange of information between services
    name: Performance tests on Azure
    runs-on: ubuntu-latest
    environment: Test
    needs: [before_performance_tests]

    env:
      ENVIRONMENT: test
    strategy:
      max-parallel: 1
      matrix:
        include:
          - ilines: 10
            xlines: 9
            samples: 8
            duration: "10s"
            vus: 1

    steps:
      - uses: actions/checkout@v2
      - name: Login to Azure with Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set infrastructure parameters
        run: |
          echo "CONTAINER_REGISTRY=${{ secrets.SETUP_PREFIX }}0containerRegistry.azurecr.io" >> $GITHUB_ENV
          echo "CREATE_CONTAINER_INSTANCE=${{ secrets.SETUP_PREFIX }}-create-file-job" >> $GITHUB_ENV
          echo "UPLOAD_CONTAINER_INSTANCE=${{ secrets.SETUP_PREFIX }}-upload-file-job" >> $GITHUB_ENV
          echo "CLEANUP_CONTAINER_INSTANCE=${{ secrets.SETUP_PREFIX }}-cleanup-files-job" >> $GITHUB_ENV
          echo "STORAGE_LOCATION=${{ secrets.SETUP_PREFIX }}0storage" >> $GITHUB_ENV
          echo "RANDOM_VALUE"=$RANDOM >> $GITHUB_ENV

        # CI doesn't have enough space for large files. So create and upload them with Azure
      - name: Create and upload segy file
        uses: azure/arm-deploy@v1
        with:
          deploymentName: performanceTests-setup
          resourceGroupName: ${{ secrets.RESOURCE_GROUP }}
          template: tests/performance/setup.bicep
          parameters: setupPrefix=${{ secrets.SETUP_PREFIX }} random=${{ env.RANDOM }}  ilinesNumber=${{ matrix.ilines }} xlinesNumber=${{ matrix.xlines }} samplesNumber=${{ matrix.samples }}

      - name: Print create logs
        run: |
          az container logs --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ env.CREATE_CONTAINER_INSTANCE }}

      - name: Print upload logs
        run: |
          guid=$(az container logs --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ env.UPLOAD_CONTAINER_INSTANCE }} )
          echo $guid
          echo "GUID=$guid" >> $GITHUB_ENV

      - name: Set server URL
        run: |
          serverURL=$(az deployment group show \
            -g ${{ secrets.RESOURCE_GROUP }} \
            -n performanceTests-setup \
            --query properties.outputs.serverURL.value \
            -o tsv
          )
          echo "SERVER_URL=$serverURL" >> $GITHUB_ENV

      - name: Run performance tests
        env:
          SERVER_URL: ${{ env.SERVER_URL }}
          STORAGE_LOCATION: ${{ env.STORAGE_LOCATION }}
          AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.STORAGE_ACCOUNT_KEY }}
        run: |
          tag=performance
          docker build -f tests/performance/Dockerfile -t $tag .
            docker run \
            -e AZURE_STORAGE_ACCOUNT_KEY \
            -e STORAGE_LOCATION \
            -e SERVER_URL \
            $tag \
            /bin/sh -c 'python ./tests/performance/performance.py ${{ matrix.vus }} ${{ matrix.duration }}'

      - name: Print stderr
        run: |
          cat stderr.txt

      - name: Print stdout
        run: |
          cat stdout.txt

      - name: Print summary
        run: |
          cat summary.json

      - name: Cleanup created files
        uses: azure/arm-deploy@v1
        with:
          deploymentName: performanceTests-teardown
          resourceGroupName: ${{ secrets.RESOURCE_GROUP }}
          template: tests/performance/teardown.bicep
          parameters: setupPrefix=${{ secrets.SETUP_PREFIX }}

      - name: Print cleanup logs
        run: |
          az container logs --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ env.CLEANUP_CONTAINER_INSTANCE }}

